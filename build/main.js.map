{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/@openlayers/pepjs/dist/pep.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/Feature.js","webpack:///./main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","content","options","hmr","transform","insertInto","undefined","locals","useSourceMap","list","toString","map","item","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","fn","memo","stylesInDom","isOldIE","window","document","atob","arguments","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","Error","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","createStyleElement","createElement","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","result","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","createEvent","initEvent","bubbles","cancelable","buttons","pressure","clientX","y","clientY","pointerId","width","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","detail","PointerMap","Map","SparseArrayMap","array","size","set","k","delete","has","callback","thisArg","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","events","register","element","es","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","listen","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","added","addedNodes","removed","removedNodes","attrib2css","selector","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","abs","dy","prepareEvent","pd","webkitForce","WEBKIT_FORCE_AT_MOUSE_DOWN","prepareButtonsForMove","which","mousedown","button","webkitmouseforcechanged","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","evts","oldSt","scrollTypes","UP","includes","DOWN","LEFT","RIGHT","touchAction","split","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","removePrimaryPointer","inPointer","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","altitudeAngle","tan","radToDeg","PI","atan","cos","azimuthAngle","sin","touchType","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","currentTarget","dya","dxa","left","right","findTouch","inTL","inId","vacuumTouches","touches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchforcechange","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","setTimeout","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","assertConnected","elem","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","textContent","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding","factory","clamp","cosh","squaredSegmentDistance","x1","y1","x2","y2","math_squaredDistance","toRadians","angleInDegrees","modulo","b","lerp","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","util_abstract","uidCounter_","getUid","ol_uid","String","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","assert","assertion","errorCode","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","BELOW","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Infinity","createOrUpdate","createOrUpdateEmpty","equals","extend","extendCoordinates","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","extent_getArea","area","isEmpty","getWidth","getHeight","getBottomLeft","getBottomRight","getCenter","getCorner","corner","getTopLeft","getTopRight","getForViewAndSize","center","resolution","rotation","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","applyTransform","transformFn","xs","ys","_boundingExtentXYs","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","toEPSG4326","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","obj_assign","assign","var_sources","TypeError","getValues","values","obj_isEmpty","transforms","destination","sourceCode","destinationCode","projections_cache","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","projections2","forwardTransform","inverseTransform","proj_userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","CollectionEventType","ADD","REMOVE","ObjectEventType","listener","opt_this","opt_once","originalListener_1","eventsKey","listenOnce","unlistenByKey","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","numberSafeCompareFunction","linearFindNearest","arr","direction","reverseSubArray","begin","tmp","array_extend","extension","isArray","array_equals","arr1","arr2","len1","TRUE","FALSE","VOID","Event","BaseEvent","propagationStopped","stopPropagation","Target_extends","events_Target","Target","opt_target","target_","pendingRemovals_","dispatching_","listeners_","listeners","evt","pendingRemovals","getListeners","hasListener","opt_type","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","RESIZE","WHEEL","Observable_extends","ol_Observable","Observable","revision_","getRevision","on","len","once","un","Object_extends","ObjectEvent","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","ol_Collection","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","removeAt","prev","setAt","opt_except","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","getEventPixel","pixel","configurable","getCoordinateFromPixel","ua","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","IMAGE_DECODE","Image","decode","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","coordinate_equals","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","Geometry_extends","tmpTransform","geom_Geometry","Geometry","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","clone","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","Point_extends","geom_Point","Point","deflateCoordinate","linearRingContainsExtent","val","forEachCorner","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","intersectsLineString","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","currentCenter","currentResolution","opt_rotation","metrics","getComputedStyle","parseInt","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","fit","geometryOrExtent","geometry","userProjection","fitInternal","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerOnInternal","centerX","centerY","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","newNode","oldNode","replaceChild","removeNode","node","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","Base_extends","Base","BaseLayer","properties","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","hasOverlay","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap_extends","cache","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","labelCache_","labelCacheListenerKey_","overlays_","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","getId","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","top","getTargetElement","getView","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","declutterItems","layerIndex","usedTiles","renderFrame","setLayerGroup","setSize","setView","computedStyle","offsetWidth","parseFloat","offsetHeight","Control_extends","control_Control","Control","listenerKeys","getMap","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontParameters","font","family","fontFamily","fontWeight","fontStyle","families","weight","Layer_extends","inView","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","distance","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragZoom","KeyCode","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","context","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromString","cacheSize","color","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","Number","fromStringInternal_","color_toString","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","asColorLike","measureFont","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","setInterval","div","heights","measureTextHeight","margin","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg2","translatedCoordinate","offsets","projectionExtent","worldWidth","declutteredFeatures","numLayers","tmpCoord","getWrapX","callback_1","declutterTree","items","zIndexItems","renderDeclutter","renderDeclutterItems","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","labelCacheKey_","children_","previousElement","childElementCount","lastElementChild","oldChildren","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","ImageState","Image_extends","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","ImageTile_extends","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","TileRange","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","match","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ_extends","source_XYZ","xyzOptions","gridOptions","createXYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","renderer_Layer_extends","renderer_Layer","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","layerExtent","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","clearRect","clips","clipZs","currentClip","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","canvasTransform","getTileImage","tileAlpha","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","asArray","drawHitDetectionCanvas_","Circle_extends","Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","setGeometry","zIndex_","setRenderer","setFill","setStroke","setText","defaultStyles","createDefaultStyle","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","styles_1","toFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroups","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Default","LineString","Text","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","flatOffset","flatEnd","oo","declutterGroup","drawChars_","geometryWidths","interiorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","interpolate","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","box","rbush_min_default","declutterData","currentAlpha","drawTextImageWithPointPlacement_","execute_","featureCallback","opt_hitExtent","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","declutterGroupIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","cc","chars","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","imageData","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","makeScale","vectorSource","clipped","declutterReplays","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadFeatures","getSquaredTolerance","dirty","userExtent","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","Vector_extends","Vector","VectorLayer","FormatType","ARRAY_BUFFER","XML","withCredentials","featureloader_xhr","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","loadingstrategy_all","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","source_Vector_extends","VectorSourceEvent","opt_feature","source_Vector","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","setLoader","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","main_source","client","csv","curIndex","prevIndex","line","fromLonLat","mass"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/*!\n * PEP v0.5.3 | https://github.com/jquery/PEP\n * Copyright jQuery Foundation and other contributors | http://jquery.org/license\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.PointerEventsPolyfill = factory());\n}(this, function () { 'use strict';\n\n  /**\n   * This is the constructor for new PointerEvents.\n   *\n   * New Pointer Events must be given a type, and an optional dictionary of\n   * initialization properties.\n   *\n   * Due to certain platform requirements, events returned from the constructor\n   * identify as MouseEvents.\n   *\n   * @constructor\n   * @param {String} inType The type of the event to create.\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\n   */\n  var MOUSE_PROPS = [\n    'bubbles',\n    'cancelable',\n    'view',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n    'pageX',\n    'pageY'\n  ];\n\n  var MOUSE_DEFAULTS = [\n    false,\n    false,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n    0,\n    0\n  ];\n\n  function PointerEvent(inType, inDict) {\n    inDict = inDict || Object.create(null);\n\n    var e = document.createEvent('Event');\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\n\n    // define inherited MouseEvent properties\n    // skip bubbles and cancelable since they're set above in initEvent()\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\n      p = MOUSE_PROPS[i];\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\n    }\n    e.buttons = inDict.buttons || 0;\n\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n\n    if (inDict.pressure !== undefined && e.buttons) {\n      pressure = inDict.pressure;\n    } else {\n      pressure = e.buttons ? 0.5 : 0;\n    }\n\n    // add x/y properties aliased to clientX/Y\n    e.x = e.clientX;\n    e.y = e.clientY;\n\n    // define the properties of the PointerEvent interface\n    e.pointerId = inDict.pointerId || 0;\n    e.width = inDict.width || 1;\n    e.height = inDict.height || 1;\n    e.pressure = pressure;\n    e.tiltX = inDict.tiltX || 0;\n    e.tiltY = inDict.tiltY || 0;\n    e.twist = inDict.twist || 0;\n    e.tangentialPressure = inDict.tangentialPressure || 0;\n    e.pointerType = inDict.pointerType || '';\n    e.hwTimestamp = inDict.hwTimestamp || 0;\n    e.isPrimary = inDict.isPrimary || false;\n    e.detail = 0;\n    return e;\n  }\n\n  /**\n   * This module implements a map of pointer states\n   */\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\n\n  function SparseArrayMap() {\n    this.array = [];\n    this.size = 0;\n  }\n\n  SparseArrayMap.prototype = {\n    set: function(k, v) {\n      if (v === undefined) {\n        return this.delete(k);\n      }\n      if (!this.has(k)) {\n        this.size++;\n      }\n      this.array[k] = v;\n    },\n    has: function(k) {\n      return this.array[k] !== undefined;\n    },\n    delete: function(k) {\n      if (this.has(k)) {\n        delete this.array[k];\n        this.size--;\n      }\n    },\n    get: function(k) {\n      return this.array[k];\n    },\n    clear: function() {\n      this.array.length = 0;\n      this.size = 0;\n    },\n\n    // return value, key, map\n    forEach: function(callback, thisArg) {\n      return this.array.forEach(function(v, k) {\n        callback.call(thisArg, v, k, this);\n      }, this);\n    }\n  };\n\n  var CLONE_PROPS = [\n\n    // MouseEvent\n    'bubbles',\n    'cancelable',\n    'view',\n    'detail',\n    'screenX',\n    'screenY',\n    'clientX',\n    'clientY',\n    'ctrlKey',\n    'altKey',\n    'shiftKey',\n    'metaKey',\n    'button',\n    'relatedTarget',\n\n    // DOM Level 3\n    'buttons',\n\n    // PointerEvent\n    'pointerId',\n    'width',\n    'height',\n    'pressure',\n    'tiltX',\n    'tiltY',\n    'pointerType',\n    'hwTimestamp',\n    'isPrimary',\n\n    // event instance\n    'type',\n    'target',\n    'currentTarget',\n    'which',\n    'pageX',\n    'pageY',\n    'timeStamp'\n  ];\n\n  var CLONE_DEFAULTS = [\n\n    // MouseEvent\n    false,\n    false,\n    null,\n    null,\n    0,\n    0,\n    0,\n    0,\n    false,\n    false,\n    false,\n    false,\n    0,\n    null,\n\n    // DOM Level 3\n    0,\n\n    // PointerEvent\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    '',\n    0,\n    false,\n\n    // event instance\n    '',\n    null,\n    null,\n    0,\n    0,\n    0,\n    0\n  ];\n\n  var BOUNDARY_EVENTS = {\n    'pointerover': 1,\n    'pointerout': 1,\n    'pointerenter': 1,\n    'pointerleave': 1\n  };\n\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\n\n  /**\n   * This module is for normalizing events. Mouse and Touch events will be\n   * collected here, and fire PointerEvents that have the same semantics, no\n   * matter the source.\n   * Events fired:\n   *   - pointerdown: a pointing is added\n   *   - pointerup: a pointer is removed\n   *   - pointermove: a pointer is moved\n   *   - pointerover: a pointer crosses into an element\n   *   - pointerout: a pointer leaves an element\n   *   - pointercancel: a pointer will no longer generate events\n   */\n  var dispatcher = {\n    pointermap: new PointerMap(),\n    eventMap: Object.create(null),\n    captureInfo: Object.create(null),\n\n    // Scope objects for native events.\n    // This exists for ease of testing.\n    eventSources: Object.create(null),\n    eventSourceList: [],\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * `inSource` must contain an array of event names named `events`, and\n     * functions with the names specified in the `events` array.\n     * @param {string} name A name for the event source\n     * @param {Object} source A new source of platform events.\n     */\n    registerSource: function(name, source) {\n      var s = source;\n      var newEvents = s.events;\n      if (newEvents) {\n        newEvents.forEach(function(e) {\n          if (s[e]) {\n            this.eventMap[e] = s[e].bind(s);\n          }\n        }, this);\n        this.eventSources[name] = s;\n        this.eventSourceList.push(s);\n      }\n    },\n    register: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.register.call(es, element);\n      }\n    },\n    unregister: function(element) {\n      var l = this.eventSourceList.length;\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\n\n        // call eventsource register\n        es.unregister.call(es, element);\n      }\n    },\n    contains: /*scope.external.contains || */function(container, contained) {\n      try {\n        return container.contains(contained);\n      } catch (ex) {\n\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n        return false;\n      }\n    },\n\n    // EVENTS\n    down: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerdown', inEvent);\n    },\n    move: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointermove', inEvent);\n    },\n    up: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerup', inEvent);\n    },\n    enter: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerenter', inEvent);\n    },\n    leave: function(inEvent) {\n      inEvent.bubbles = false;\n      this.fireEvent('pointerleave', inEvent);\n    },\n    over: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerover', inEvent);\n    },\n    out: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointerout', inEvent);\n    },\n    cancel: function(inEvent) {\n      inEvent.bubbles = true;\n      this.fireEvent('pointercancel', inEvent);\n    },\n    leaveOut: function(event) {\n      this.out(event);\n      this.propagate(event, this.leave, false);\n    },\n    enterOver: function(event) {\n      this.over(event);\n      this.propagate(event, this.enter, true);\n    },\n\n    // LISTENER LOGIC\n    eventHandler: function(inEvent) {\n\n      // This is used to prevent multiple dispatch of pointerevents from\n      // platform events. This can happen when two elements in different scopes\n      // are set up to create pointer events, which is relevant to Shadow DOM.\n      if (inEvent._handledByPE) {\n        return;\n      }\n      var type = inEvent.type;\n      var fn = this.eventMap && this.eventMap[type];\n      if (fn) {\n        fn(inEvent);\n      }\n      inEvent._handledByPE = true;\n    },\n\n    // set up event listeners\n    listen: function(target, events) {\n      events.forEach(function(e) {\n        this.addEvent(target, e);\n      }, this);\n    },\n\n    // remove event listeners\n    unlisten: function(target, events) {\n      events.forEach(function(e) {\n        this.removeEvent(target, e);\n      }, this);\n    },\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\n      target.addEventListener(eventName, this.boundHandler);\n    },\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\n      target.removeEventListener(eventName, this.boundHandler);\n    },\n\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `inEvent`.\n     *\n     * @param {string} inType A string representing the type of event to create\n     * @param {Event} inEvent A platform event with a target\n     * @return {Event} A PointerEvent of type `inType`\n     */\n    makeEvent: function(inType, inEvent) {\n\n      // relatedTarget must be null if pointer is captured\n      if (this.captureInfo[inEvent.pointerId]) {\n        inEvent.relatedTarget = null;\n      }\n      var e = new PointerEvent(inType, inEvent);\n      if (inEvent.preventDefault) {\n        e.preventDefault = inEvent.preventDefault;\n      }\n      e._target = e._target || inEvent.target;\n      return e;\n    },\n\n    // make and dispatch an event in one call\n    fireEvent: function(inType, inEvent) {\n      var e = this.makeEvent(inType, inEvent);\n      return this.dispatchEvent(e);\n    },\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} inEvent An event that contains properties to copy.\n     * @return {Object} An object containing shallow copies of `inEvent`'s\n     *    properties.\n     */\n    cloneEvent: function(inEvent) {\n      var eventCopy = Object.create(null);\n      var p;\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\n        p = CLONE_PROPS[i];\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\n\n        // Work around SVGInstanceElement shadow tree\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\n        // This is the behavior implemented by Firefox.\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\n          if (eventCopy[p] instanceof SVGElementInstance) {\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\n          }\n        }\n      }\n\n      // keep the semantics of preventDefault\n      if (inEvent.preventDefault) {\n        eventCopy.preventDefault = function() {\n          inEvent.preventDefault();\n        };\n      }\n      return eventCopy;\n    },\n    getTarget: function(inEvent) {\n      var capture = this.captureInfo[inEvent.pointerId];\n      if (!capture) {\n        return inEvent._target;\n      }\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\n        return capture;\n      }\n    },\n    propagate: function(event, fn, propagateDown) {\n      var target = event.target;\n      var targets = [];\n\n      // Order of conditions due to document.contains() missing in IE.\n      while (target != null && target !== document && !target.contains(event.relatedTarget)) {\n        targets.push(target);\n        target = target.parentNode;\n\n        // Touch: Do not propagate if node is detached.\n        if (!target) {\n          return;\n        }\n      }\n      if (propagateDown) {\n        targets.reverse();\n      }\n      targets.forEach(function(target) {\n        event.target = target;\n        fn.call(this, event);\n      }, this);\n    },\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\n      if (this.captureInfo[inPointerId]) {\n        this.releaseCapture(inPointerId, skipDispatch);\n      }\n\n      this.captureInfo[inPointerId] = inTarget;\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\n      document.addEventListener('pointerup', this.implicitRelease);\n      document.addEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('gotpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = inTarget;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    releaseCapture: function(inPointerId, skipDispatch) {\n      var t = this.captureInfo[inPointerId];\n      if (!t) {\n        return;\n      }\n\n      this.captureInfo[inPointerId] = undefined;\n      document.removeEventListener('pointerup', this.implicitRelease);\n      document.removeEventListener('pointercancel', this.implicitRelease);\n\n      var e = new PointerEvent('lostpointercapture', { bubbles: true });\n      e.pointerId = inPointerId;\n      e._target = t;\n\n      if (!skipDispatch) {\n        this.asyncDispatchEvent(e);\n      }\n    },\n    /**\n     * Dispatches the event to its target.\n     *\n     * @param {Event} inEvent The event to be dispatched.\n     * @return {Boolean} True if an event handler returns true, false otherwise.\n     */\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\n      var t = this.getTarget(inEvent);\n      if (t) {\n        return t.dispatchEvent(inEvent);\n      }\n    },\n    asyncDispatchEvent: function(inEvent) {\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\n    }\n  };\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\n\n  var targeting = {\n    shadow: function(inEl) {\n      if (inEl) {\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\n      }\n    },\n    canTarget: function(shadow) {\n      return shadow && Boolean(shadow.elementFromPoint);\n    },\n    targetingShadow: function(inEl) {\n      var s = this.shadow(inEl);\n      if (this.canTarget(s)) {\n        return s;\n      }\n    },\n    olderShadow: function(shadow) {\n      var os = shadow.olderShadowRoot;\n      if (!os) {\n        var se = shadow.querySelector('shadow');\n        if (se) {\n          os = se.olderShadowRoot;\n        }\n      }\n      return os;\n    },\n    allShadows: function(element) {\n      var shadows = [];\n      var s = this.shadow(element);\n      while (s) {\n        shadows.push(s);\n        s = this.olderShadow(s);\n      }\n      return shadows;\n    },\n    searchRoot: function(inRoot, x, y) {\n      if (inRoot) {\n        var t = inRoot.elementFromPoint(x, y);\n        var st, sr;\n\n        // is element a shadow host?\n        sr = this.targetingShadow(t);\n        while (sr) {\n\n          // find the the element inside the shadow root\n          st = sr.elementFromPoint(x, y);\n          if (!st) {\n\n            // check for older shadows\n            sr = this.olderShadow(sr);\n          } else {\n\n            // shadowed element may contain a shadow root\n            var ssr = this.targetingShadow(st);\n            return this.searchRoot(ssr, x, y) || st;\n          }\n        }\n\n        // light dom element is the target\n        return t;\n      }\n    },\n    owner: function(element) {\n      var s = element;\n\n      // walk up until you hit the shadow root or document\n      while (s.parentNode) {\n        s = s.parentNode;\n      }\n\n      // the owner element is expected to be a Document or ShadowRoot\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        s = document;\n      }\n      return s;\n    },\n    findTarget: function(inEvent) {\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n\n      // if the listener is in the shadow root, it is much faster to start there\n      var s = this.owner(inEvent.target);\n\n      // if x, y is not in this root, fall back to document search\n      if (!s.elementFromPoint(x, y)) {\n        s = document;\n      }\n      return this.searchRoot(s, x, y);\n    }\n  };\n\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\n  var SELECTOR = '[touch-action]';\n  var OBSERVER_INIT = {\n    subtree: true,\n    childList: true,\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: ['touch-action']\n  };\n\n  function Installer(add, remove, changed, binder) {\n    this.addCallback = add.bind(binder);\n    this.removeCallback = remove.bind(binder);\n    this.changedCallback = changed.bind(binder);\n    if (MO) {\n      this.observer = new MO(this.mutationWatcher.bind(this));\n    }\n  }\n\n  Installer.prototype = {\n    watchSubtree: function(target) {\n\n      // Only watch scopes that can target find, as these are top-level.\n      // Otherwise we can see duplicate additions and removals that add noise.\n      //\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\n      // a removal without an insertion when a node is redistributed among\n      // shadows. Since it all ends up correct in the document, watching only\n      // the document will yield the correct mutations to watch.\n      if (this.observer && targeting.canTarget(target)) {\n        this.observer.observe(target, OBSERVER_INIT);\n      }\n    },\n    enableOnSubtree: function(target) {\n      this.watchSubtree(target);\n      if (target === document && document.readyState !== 'complete') {\n        this.installOnLoad();\n      } else {\n        this.installNewSubtree(target);\n      }\n    },\n    installNewSubtree: function(target) {\n      forEach(this.findElements(target), this.addElement, this);\n    },\n    findElements: function(target) {\n      if (target.querySelectorAll) {\n        return target.querySelectorAll(SELECTOR);\n      }\n      return [];\n    },\n    removeElement: function(el) {\n      this.removeCallback(el);\n    },\n    addElement: function(el) {\n      this.addCallback(el);\n    },\n    elementChanged: function(el, oldValue) {\n      this.changedCallback(el, oldValue);\n    },\n    concatLists: function(accum, list) {\n      return accum.concat(toArray(list));\n    },\n\n    // register all touch-action = none nodes on document load\n    installOnLoad: function() {\n      document.addEventListener('readystatechange', function() {\n        if (document.readyState === 'complete') {\n          this.installNewSubtree(document);\n        }\n      }.bind(this));\n    },\n    isElement: function(n) {\n      return n.nodeType === Node.ELEMENT_NODE;\n    },\n    flattenMutationTree: function(inNodes) {\n\n      // find children with touch-action\n      var tree = map(inNodes, this.findElements, this);\n\n      // make sure the added nodes are accounted for\n      tree.push(filter(inNodes, this.isElement));\n\n      // flatten the list\n      return tree.reduce(this.concatLists, []);\n    },\n    mutationWatcher: function(mutations) {\n      mutations.forEach(this.mutationHandler, this);\n    },\n    mutationHandler: function(m) {\n      if (m.type === 'childList') {\n        var added = this.flattenMutationTree(m.addedNodes);\n        added.forEach(this.addElement, this);\n        var removed = this.flattenMutationTree(m.removedNodes);\n        removed.forEach(this.removeElement, this);\n      } else if (m.type === 'attributes') {\n        this.elementChanged(m.target, m.oldValue);\n      }\n    }\n  };\n\n  function shadowSelector(s) {\n    return 'body /shadow-deep/ ' + s;\n  }\n  function rule(v) {\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\n  }\n  var attrib2css = [\n    { selector: '[touch-action=\"none\"]', value: 'none' },\n    { selector: '[touch-action=\"auto\"]', value: 'auto' },\n    { selector: '[touch-action~=\"pan-x\"]', value: 'pan-x' },\n    { selector: '[touch-action~=\"pan-y\"]', value: 'pan-y' },\n    { selector: '[touch-action~=\"pan-up\"]', value: 'pan-up' },\n    { selector: '[touch-action~=\"pan-down\"]', value: 'pan-down' },\n    { selector: '[touch-action~=\"pan-left\"]', value: 'pan-left' },\n    { selector: '[touch-action~=\"pan-right\"]', value: 'pan-right' }\n  ];\n  var styles = '';\n\n  // only install stylesheet if the browser has touch action support\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\n\n  // only add shadow selectors if shadowdom is supported\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\n\n  function applyAttributeStyles() {\n    if (hasNativePE) {\n      attrib2css.forEach(function(r) {\n        styles += r.selector + rule(r.value) + '\\n';\n        if (hasShadowRoot) {\n          styles += shadowSelector(r.selector) + rule(r.value) + '\\n';\n        }\n      });\n\n      var el = document.createElement('style');\n      el.textContent = styles;\n      document.head.appendChild(el);\n    }\n  }\n\n  var pointermap = dispatcher.pointermap;\n\n  // radius around touchend that swallows mouse events\n  var DEDUP_DIST = 25;\n\n  // left, middle, right, back, forward\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\n\n  var HAS_BUTTONS = false;\n  try {\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\n  } catch (e) {}\n\n  // handler block for native mouse events\n  var mouseEvents = {\n    POINTER_ID: 1,\n    POINTER_TYPE: 'mouse',\n    events: [\n      'mousedown',\n      'webkitmouseforcechanged',\n      'mousemove',\n      'mouseup',\n      'mouseover',\n      'mouseout'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    lastTouches: [],\n\n    // collide with the global mouse listener\n    isEventSimulatedFromTouch: function(inEvent) {\n      var lts = this.lastTouches;\n      var x = inEvent.clientX;\n      var y = inEvent.clientY;\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n\n        // simulated mouse events will be swallowed near a primary touchend\n        var dx = Math.abs(x - t.x);\n        var dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n          return true;\n        }\n      }\n    },\n    prepareEvent: function(inEvent) {\n      var e = dispatcher.cloneEvent(inEvent);\n\n      // forward mouse preventDefault\n      var pd = e.preventDefault;\n      e.preventDefault = function() {\n        inEvent.preventDefault();\n        pd();\n      };\n      e.pointerId = this.POINTER_ID;\n      e.isPrimary = true;\n      e.pointerType = this.POINTER_TYPE;\n      if ('webkitForce' in inEvent) {\n        e.pressure = inEvent.webkitForce - MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN;\n      }\n      return e;\n    },\n    prepareButtonsForMove: function(e, inEvent) {\n      var p = pointermap.get(this.POINTER_ID);\n\n      // Update buttons state after possible out-of-document mouseup.\n      if (inEvent.which === 0 || !p) {\n        e.buttons = 0;\n      } else {\n        e.buttons = p.buttons;\n      }\n      inEvent.buttons = e.buttons;\n    },\n    mousedown: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\n          if (p) { e.buttons |= p.buttons; }\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n        if (!p || p.buttons === 0) {\n          dispatcher.down(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n\n    // This is called when the user force presses without moving x/y\n    webkitmouseforcechanged: function(inEvent) {\n      this.mousemove(inEvent);\n    },\n    mousemove: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.move(e);\n      }\n    },\n    mouseup: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var p = pointermap.get(this.POINTER_ID);\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) {\n          var up = BUTTON_TO_BUTTONS[e.button];\n\n          // Produces wrong state of buttons in Browsers without `buttons` support\n          // when a mouse button that was pressed outside the document is released\n          // inside and other buttons are still pressed down.\n          e.buttons = p ? p.buttons & ~up : 0;\n          inEvent.buttons = e.buttons;\n        }\n        pointermap.set(this.POINTER_ID, inEvent);\n\n        // Support: Firefox <=44 only\n        // FF Ubuntu includes the lifted button in the `buttons` property on\n        // mouseup.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\n        if (e.buttons === 0) {\n          dispatcher.up(e);\n        } else {\n          dispatcher.move(e);\n        }\n      }\n    },\n    mouseover: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        pointermap.set(this.POINTER_ID, inEvent);\n        dispatcher.enterOver(e);\n      }\n    },\n    mouseout: function(inEvent) {\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\n        var e = this.prepareEvent(inEvent);\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\n        e.button = -1;\n        dispatcher.leaveOut(e);\n      }\n    },\n    cancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.deactivateMouse();\n    },\n    deactivateMouse: function() {\n      pointermap.delete(this.POINTER_ID);\n    }\n  };\n\n  var captureInfo = dispatcher.captureInfo;\n  var findTarget = targeting.findTarget.bind(targeting);\n  var allShadows = targeting.allShadows.bind(targeting);\n  var pointermap$1 = dispatcher.pointermap;\n\n  // this should be long enough to ignore compat mouse events made by touch\n  var DEDUP_TIMEOUT = 2500;\n  var ATTRIB = 'touch-action';\n  var INSTALLER;\n\n  // bitmask for _scrollType\n  var UP = 1;\n  var DOWN = 2;\n  var LEFT = 4;\n  var RIGHT = 8;\n  var AUTO = UP | DOWN | LEFT | RIGHT;\n\n  // handler block for native touch events\n  var touchEvents = {\n    events: [\n      'touchstart',\n      'touchmove',\n      'touchforcechange',\n      'touchend',\n      'touchcancel'\n    ],\n    register: function(target) {\n      INSTALLER.enableOnSubtree(target);\n    },\n    unregister: function() {\n\n      // TODO(dfreedman): is it worth it to disconnect the MO?\n    },\n    elementAdded: function(el) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      if (typeof st === \"number\") {\n        el._scrollType = st;\n        dispatcher.listen(el, this.events);\n\n        // set touch-action on shadows as well\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n          dispatcher.listen(s, this.events);\n        }, this);\n      }\n    },\n    elementRemoved: function(el) {\n\n      // In some cases, an element is removed before a touchend.\n      // When this is the case, we should wait for the touchend before unlistening,\n      // because we still want pointer events to bubble up after removing from DOM.\n      if (pointermap$1.size > 0) {\n        var evts = this.events;\n        el.addEventListener('touchend', function() {\n          el._scrollType = undefined;\n          dispatcher.unlisten(el, evts);\n        });\n      } else {\n        el._scrollType = undefined;\n        dispatcher.unlisten(el, this.events);\n      }\n\n      // remove touch-action from shadow\n      allShadows(el).forEach(function(s) {\n        s._scrollType = undefined;\n        dispatcher.unlisten(s, this.events);\n      }, this);\n    },\n    elementChanged: function(el, oldValue) {\n      var a = el.getAttribute(ATTRIB);\n      var st = this.touchActionToScrollType(a);\n      var oldSt = this.touchActionToScrollType(oldValue);\n\n      // simply update scrollType if listeners are already established\n      if (typeof st === \"number\" && typeof oldSt === \"number\") {\n        el._scrollType = st;\n        allShadows(el).forEach(function(s) {\n          s._scrollType = st;\n        }, this);\n      } else if (typeof oldSt === \"number\") {\n        this.elementRemoved(el);\n      } else if (typeof st === \"number\") {\n        this.elementAdded(el);\n      }\n    },\n    scrollTypes: {\n      UP: function(s) {\n        return s.includes('pan-y') || s.includes('pan-up') ? UP : 0;\n      },\n      DOWN: function(s) {\n        return s.includes('pan-y') || s.includes('pan-down') ? DOWN : 0;\n      },\n      LEFT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-left') ? LEFT : 0;\n      },\n      RIGHT: function(s) {\n        return s.includes('pan-x') || s.includes('pan-right') ? RIGHT : 0;\n      }\n    },\n    touchActionToScrollType: function(touchAction) {\n      if (!touchAction) {\n        return;\n      }\n\n      if (touchAction === \"auto\") {\n        return AUTO;\n      }\n\n      if (touchAction === \"none\") {\n        return 0;\n      }\n\n      var s = touchAction.split(' ');\n      var st = this.scrollTypes;\n\n      // construct a bitmask of allowed scroll directions\n      return st.UP(s) | st.DOWN(s) | st.LEFT(s) | st.RIGHT(s);\n    },\n    POINTER_TYPE: 'touch',\n    firstTouch: null,\n    isPrimaryTouch: function(inTouch) {\n      return this.firstTouch === inTouch.identifier;\n    },\n    setPrimaryTouch: function(inTouch) {\n\n      // set primary touch if there no pointers, or the only pointer is the mouse\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\n        this.firstTouch = inTouch.identifier;\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\n        this.scrolling = false;\n      }\n    },\n    removePrimaryPointer: function(inPointer) {\n      if (inPointer.isPrimary) {\n        this.firstTouch = null;\n        this.firstXY = null;\n      }\n    },\n    typeToButtons: function(type) {\n      var ret = 0;\n      if (type === 'touchstart' || type === 'touchmove' || type === 'touchforcechange') {\n        ret = 1;\n      }\n      return ret;\n    },\n    touchToPointer: function(inTouch) {\n      var cte = this.currentTouchEvent;\n      var e = dispatcher.cloneEvent(inTouch);\n\n      // We reserve pointerId 1 for Mouse.\n      // Touch identifiers can start at 0.\n      // Add 2 to the touch identifier for compatibility.\n      var id = e.pointerId = inTouch.identifier + 2;\n      e.target = captureInfo[id] || findTarget(e);\n      e.bubbles = true;\n      e.cancelable = true;\n      e.button = 0;\n      e.buttons = this.typeToButtons(cte.type);\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\n      e.pressure = inTouch.force !== undefined ?\n        inTouch.force :\n        inTouch.webkitForce !== undefined ?\n          inTouch.webkitForce : undefined;\n      e.isPrimary = this.isPrimaryTouch(inTouch);\n      if (inTouch.altitudeAngle) {\n        var tan = Math.tan(inTouch.altitudeAngle);\n        var radToDeg = 180 / Math.PI;\n        e.tiltX = Math.atan(Math.cos(inTouch.azimuthAngle) / tan) * radToDeg;\n        e.tiltY = Math.atan(Math.sin(inTouch.azimuthAngle) / tan) * radToDeg;\n      } else {\n        e.tiltX = 0;\n        e.tiltY = 0;\n      }\n      if (inTouch.touchType === 'stylus') {\n        e.pointerType = 'pen';\n      } else {\n        e.pointerType = this.POINTER_TYPE;\n      }\n\n      // forward modifier keys\n      e.altKey = cte.altKey;\n      e.ctrlKey = cte.ctrlKey;\n      e.metaKey = cte.metaKey;\n      e.shiftKey = cte.shiftKey;\n\n      // forward touch preventDefaults\n      var self = this;\n      e.preventDefault = function() {\n        self.scrolling = false;\n        self.firstXY = null;\n        cte.preventDefault();\n      };\n      return e;\n    },\n    processTouches: function(inEvent, inFunction) {\n      var tl = inEvent.changedTouches;\n      this.currentTouchEvent = inEvent;\n      for (var i = 0, t; i < tl.length; i++) {\n        t = tl[i];\n        inFunction.call(this, this.touchToPointer(t));\n      }\n    },\n\n    // For single axis scrollers, determines whether the element should emit\n    // pointer events or behave as a scroller\n    shouldScroll: function(inEvent) {\n      if (this.firstXY) {\n        var ret;\n        var st = inEvent.currentTarget._scrollType;\n        if (st === 0) {\n\n          // this element is a `touch-action: none`, should never scroll\n          ret = false;\n        } else if (st === AUTO) {\n\n          // this element is a `touch-action: auto`, should always scroll\n          ret = true;\n        } else {\n          var t = inEvent.changedTouches[0];\n\n          var dy = t.clientY - this.firstXY.Y;\n          var dya = Math.abs(dy);\n          var dx = t.clientX - this.firstXY.X;\n          var dxa = Math.abs(dx);\n\n          var up = st & UP;\n          var down = st & DOWN;\n          var left = st & LEFT;\n          var right = st & RIGHT;\n\n          if (left && right) {\n\n            // should scroll on the x axis\n            ret = dxa > dya;\n          } else if (left) {\n\n            // should scroll left\n            ret = dxa > dya && dx > 0;\n          } else if (right) {\n\n            // should scroll right\n            ret = dxa > dya && dx < 0;\n          }\n\n          if (!ret) {\n            if (up && down) {\n\n              // should scroll on the y axis\n              ret = dxa < dya;\n            } else if (up) {\n\n              // should scroll up\n              ret = dxa < dya && dy > 0;\n            } else if (down) {\n\n              // should scroll down\n              ret = dxa < dya && dy < 0;\n            }\n          }\n\n        }\n        this.firstXY = null;\n        return ret;\n      }\n    },\n    findTouch: function(inTL, inId) {\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\n        if (t.identifier === inId) {\n          return true;\n        }\n      }\n    },\n\n    // In some instances, a touchstart can happen without a touchend. This\n    // leaves the pointermap in a broken state.\n    // Therefore, on every touchstart, we remove the touches that did not fire a\n    // touchend event.\n    // To keep state globally consistent, we fire a\n    // pointercancel for this \"abandoned\" touch\n    vacuumTouches: function(inEvent) {\n      var tl = inEvent.touches;\n\n      // pointermap.size should be < tl.length here, as the touchstart has not\n      // been processed yet.\n      if (pointermap$1.size >= tl.length) {\n        var d = [];\n        pointermap$1.forEach(function(value, key) {\n\n          // Never remove pointerId == 1, which is mouse.\n          // Touch identifiers are 2 smaller than their pointerId, which is the\n          // index in pointermap.\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\n            var p = value.out;\n            d.push(p);\n          }\n        }, this);\n        d.forEach(this.cancelOut, this);\n      }\n    },\n    touchstart: function(inEvent) {\n      this.vacuumTouches(inEvent);\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\n      this.dedupSynthMouse(inEvent);\n      if (!this.scrolling) {\n        this.processTouches(inEvent, this.overDown);\n      }\n    },\n    overDown: function(inPointer) {\n      pointermap$1.set(inPointer.pointerId, {\n        target: inPointer.target,\n        out: inPointer,\n        outTarget: inPointer.target\n      });\n      dispatcher.enterOver(inPointer);\n      dispatcher.down(inPointer);\n    },\n\n    // Called when pressure or tilt changes without the x/y changing\n    touchforcechange: function(inEvent) {\n      this.touchmove(inEvent);\n    },\n    touchmove: function(inEvent) {\n      if (!this.scrolling) {\n        if (this.shouldScroll(inEvent)) {\n          this.scrolling = true;\n          this.touchcancel(inEvent);\n        } else {\n          if (inEvent.type !== 'touchforcechange') {\n            inEvent.preventDefault();\n          }\n          this.processTouches(inEvent, this.moveOverOut);\n        }\n      }\n    },\n    moveOverOut: function(inPointer) {\n      var event = inPointer;\n      var pointer = pointermap$1.get(event.pointerId);\n\n      // a finger drifted off the screen, ignore it\n      if (!pointer) {\n        return;\n      }\n      var outEvent = pointer.out;\n      var outTarget = pointer.outTarget;\n      dispatcher.move(event);\n      if (outEvent && outTarget !== event.target) {\n        outEvent.relatedTarget = event.target;\n        event.relatedTarget = outTarget;\n\n        // recover from retargeting by shadow\n        outEvent.target = outTarget;\n        if (event.target) {\n          dispatcher.leaveOut(outEvent);\n          dispatcher.enterOver(event);\n        } else {\n\n          // clean up case when finger leaves the screen\n          event.target = outTarget;\n          event.relatedTarget = null;\n          this.cancelOut(event);\n        }\n      }\n      pointer.out = event;\n      pointer.outTarget = event.target;\n    },\n    touchend: function(inEvent) {\n      this.dedupSynthMouse(inEvent);\n      this.processTouches(inEvent, this.upOut);\n    },\n    upOut: function(inPointer) {\n      if (!this.scrolling) {\n        dispatcher.up(inPointer);\n        dispatcher.leaveOut(inPointer);\n      }\n      this.cleanUpPointer(inPointer);\n    },\n    touchcancel: function(inEvent) {\n      this.processTouches(inEvent, this.cancelOut);\n    },\n    cancelOut: function(inPointer) {\n      dispatcher.cancel(inPointer);\n      dispatcher.leaveOut(inPointer);\n      this.cleanUpPointer(inPointer);\n    },\n    cleanUpPointer: function(inPointer) {\n      pointermap$1.delete(inPointer.pointerId);\n      this.removePrimaryPointer(inPointer);\n    },\n\n    // prevent synth mouse events from creating pointer events\n    dedupSynthMouse: function(inEvent) {\n      var lts = mouseEvents.lastTouches;\n      var t = inEvent.changedTouches[0];\n\n      // only the primary finger will synth mouse events\n      if (this.isPrimaryTouch(t)) {\n\n        // remember x/y of last touch\n        var lt = { x: t.clientX, y: t.clientY };\n        lts.push(lt);\n        var fn = (function(lts, lt) {\n          var i = lts.indexOf(lt);\n          if (i > -1) {\n            lts.splice(i, 1);\n          }\n        }).bind(null, lts, lt);\n        setTimeout(fn, DEDUP_TIMEOUT);\n      }\n    }\n  };\n\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\n    touchEvents.elementChanged, touchEvents);\n\n  var pointermap$2 = dispatcher.pointermap;\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\n  var msEvents = {\n    events: [\n      'MSPointerDown',\n      'MSPointerMove',\n      'MSPointerUp',\n      'MSPointerOut',\n      'MSPointerOver',\n      'MSPointerCancel',\n      'MSGotPointerCapture',\n      'MSLostPointerCapture'\n    ],\n    register: function(target) {\n      dispatcher.listen(target, this.events);\n    },\n    unregister: function(target) {\n      dispatcher.unlisten(target, this.events);\n    },\n    POINTER_TYPES: [\n      '',\n      'unavailable',\n      'touch',\n      'pen',\n      'mouse'\n    ],\n    prepareEvent: function(inEvent) {\n      var e = inEvent;\n      if (HAS_BITMAP_TYPE) {\n        e = dispatcher.cloneEvent(inEvent);\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\n      }\n      return e;\n    },\n    cleanup: function(id) {\n      pointermap$2.delete(id);\n    },\n    MSPointerDown: function(inEvent) {\n      pointermap$2.set(inEvent.pointerId, inEvent);\n      var e = this.prepareEvent(inEvent);\n      dispatcher.down(e);\n    },\n    MSPointerMove: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.move(e);\n    },\n    MSPointerUp: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.up(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSPointerOut: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.leaveOut(e);\n    },\n    MSPointerOver: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.enterOver(e);\n    },\n    MSPointerCancel: function(inEvent) {\n      var e = this.prepareEvent(inEvent);\n      dispatcher.cancel(e);\n      this.cleanup(inEvent.pointerId);\n    },\n    MSLostPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    },\n    MSGotPointerCapture: function(inEvent) {\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\n      dispatcher.dispatchEvent(e);\n    }\n  };\n\n  function applyPolyfill() {\n\n    // only activate if this platform does not have pointer events\n    if (!window.PointerEvent) {\n      window.PointerEvent = PointerEvent;\n\n      if (window.navigator.msPointerEnabled) {\n        var tp = window.navigator.msMaxTouchPoints;\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: tp,\n          enumerable: true\n        });\n        dispatcher.registerSource('ms', msEvents);\n      } else {\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\n          value: 0,\n          enumerable: true\n        });\n        dispatcher.registerSource('mouse', mouseEvents);\n        if (window.ontouchstart !== undefined) {\n          dispatcher.registerSource('touch', touchEvents);\n        }\n      }\n\n      dispatcher.register(document);\n    }\n  }\n\n  var n = window.navigator;\n  var s;\n  var r;\n  var h;\n  function assertActive(id) {\n    if (!dispatcher.pointermap.has(id)) {\n      var error = new Error('NotFoundError');\n      error.name = 'NotFoundError';\n      throw error;\n    }\n  }\n  function assertConnected(elem) {\n    var parent = elem.parentNode;\n    while (parent && parent !== elem.ownerDocument) {\n      parent = parent.parentNode;\n    }\n    if (!parent) {\n      var error = new Error('InvalidStateError');\n      error.name = 'InvalidStateError';\n      throw error;\n    }\n  }\n  function inActiveButtonState(id) {\n    var p = dispatcher.pointermap.get(id);\n    return p.buttons !== 0;\n  }\n  if (n.msPointerEnabled) {\n    s = function(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this, true);\n        this.msSetPointerCapture(pointerId);\n      }\n    };\n    r = function(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId, true);\n      this.msReleasePointerCapture(pointerId);\n    };\n  } else {\n    s = function setPointerCapture(pointerId) {\n      assertActive(pointerId);\n      assertConnected(this);\n      if (inActiveButtonState(pointerId)) {\n        dispatcher.setCapture(pointerId, this);\n      }\n    };\n    r = function releasePointerCapture(pointerId) {\n      assertActive(pointerId);\n      dispatcher.releaseCapture(pointerId);\n    };\n  }\n  h = function hasPointerCapture(pointerId) {\n    return !!dispatcher.captureInfo[pointerId];\n  };\n\n  function applyPolyfill$1() {\n    if (window.Element && !Element.prototype.setPointerCapture) {\n      Object.defineProperties(Element.prototype, {\n        'setPointerCapture': {\n          value: s\n        },\n        'releasePointerCapture': {\n          value: r\n        },\n        'hasPointerCapture': {\n          value: h\n        }\n      });\n    }\n  }\n\n  applyAttributeStyles();\n  applyPolyfill();\n  applyPolyfill$1();\n\n  var pointerevents = {\n    dispatcher: dispatcher,\n    Installer: Installer,\n    PointerEvent: PointerEvent,\n    PointerMap: PointerMap,\n    targetFinding: targeting\n  };\n\n  return pointerevents;\n\n}));","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type ReturnType */\n    var lastResult;\n    /** @type Array<any> */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.target_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.target_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport '@openlayers/pepjs';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        element.setAttribute('touch-action', 'none');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                tile.load();\n                if (tile.getState() === TileState.LOADING) {\n                    this.tilesLoadingKeys_[tileKey] = true;\n                    ++this.tilesLoading_;\n                    ++newLoads;\n                }\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform, getTransformFromProjections } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj/Projection.js\").default} [sourceProjection] The source projection.\n         * @param {import(\"../proj/Projection.js\").default} [destProjection] The destination projection.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, sourceProjection, destProjection) {\n            if (!sourceProjection || !destProjection) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var transform = getTransformFromProjections(sourceProjection, destProjection);\n            var clone = this.clone();\n            clone.applyTransform(transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj/Projection.js\").default} sourceProjection The source projection.\n     * @param {import(\"../proj/Projection.js\").default} destProjection The destination projection.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, sourceProjection, destProjection) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, sourceProjection, destProjection);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getSizeFromViewport_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed,\n            hasOverlay: false\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events/Target.js\").default}\n         */\n        _this.labelCache_ = null;\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels between\n        // the center of the tile and the center of the viewport.  The factor of 65536\n        // means that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var center = frameState.viewState.center;\n        var deltaX = tileCenter[0] - center[0];\n        var deltaY = tileCenter[1] - center[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport var getFontParameters = (function () {\n    var style;\n    /**\n     * @type {Object<string, FontParameters>}\n     */\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            var fontWeight = style.fontWeight;\n            var fontStyle = style.fontStyle;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            var families = family.split(/,\\s?/);\n            cache[font] = {\n                families: families,\n                weight: fontWeight,\n                style: fontStyle\n            };\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {boolean} hasOverlay Set by the renderer when an overlay for points and text is used.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 100;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var context = getMeasureContext();\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            context.font = fontStyle + ' ' + fontWeight + ' ' + size + referenceFont;\n            referenceWidth = context.measureText(text).width;\n            if (fontFamily != referenceFont) {\n                context.font = fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont;\n                var width = context.measureText(text).width;\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    if (labelCache.getCount()) {\n                        labelCache.clear();\n                    }\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (!(key in checked)) {\n                checked[key] = retries;\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checked[key] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureFont) {\n        measureContext.font = measureFont = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (opacity != 1) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        this.consumers = {};\n        _super.prototype.clear.call(this);\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        var offsets = [[0, 0]];\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n            if (checkWrapped) {\n                offsets.push([-worldWidth, 0], [worldWidth, 0]);\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                    if (layerRenderer && source) {\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\nimport EventType from '../events/EventType.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.labelCacheKey_ = listen(labelCache, EventType.CLEAR, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.labelCacheKey_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var hasOverlay = false;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            hasOverlay = hasOverlay || layerState.hasOverlay;\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            var childElementCount = element.childElementCount;\n            if ((element !== previousElement || i == ii - 1) && childElementCount === 2 && !hasOverlay) {\n                element.removeChild(element.lastElementChild);\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                hasOverlay = childElementCount === 2;\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = typeof screen !== 'undefined';\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform, toString as transformToString } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {import(\"../../transform\").Transform} transform Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transformToString(transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var canvasTransform = transformToString(this.pixelTransform);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.hitDetectionCanvas_ = this.canvas_;\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_ ?\n                    (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n                    null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][4])++;\n            }\n            else {\n                declutter = this.declutterGroups_ = [createEmpty()];\n                declutter[0].push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = strokeState.lineCap;\n                context.lineJoin = strokeState.lineJoin;\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        var context = declutterData[0];\n                        var currentAlpha = context.globalAlpha;\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = opacity;\n                        }\n                        if (declutterData.length > 11) {\n                            this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                        }\n                        drawImage.apply(undefined, declutterData);\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = currentAlpha;\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            if (declutterGroups.length < index + 1) {\n                                declutterGroup = createEmpty();\n                                declutterGroup.push(declutterGroups[0][4]);\n                                declutterGroups.push(declutterGroup);\n                            }\n                            declutterGroup = declutterGroups[index];\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                        if (declutterGroup) {\n                            if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[4];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity\n                });\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport { getUserProjection } from '../proj.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj/Projection.js\").default} [projection] The view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, projection) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, projection);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj/Projection.js\").default} [projection] The view projection.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, projection) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, getUserProjection(), projection);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent } from '../../extent.js';\nimport { fromUserExtent, toUserExtent, getUserProjection } from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        this.useContainer(target, this.pixelTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clip(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            vectorSource.loadFeatures(toUserExtent(extent, projection), resolution, userProjection);\n        }\n        else {\n            vectorSource.loadFeatures(extent, resolution, projection);\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, projection);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(userExtent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(userExtent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj/Projection.js\").default} projection The view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, projection) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, projection) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, projection);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","import 'ol/ol.css';\nimport {fromLonLat} from 'ol/proj';\nimport {Map, View} from 'ol';\nimport OSM from 'ol/source/OSM';\nimport {Vector as VectorLayer, Tile as TileLayer} from 'ol/layer';\nimport {Vector as VectorSource, Stamen} from 'ol/source';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\n\nconst source = new VectorSource();\n\nconst client = new XMLHttpRequest();\nclient.open('GET', 'data/fooddelivery.csv');\nclient.onload = function() {\n  const csv = client.responseText;\n  const features = [];\n\n  let prevIndex = csv.indexOf('\\n') + 1; // scan past the header line\n\n  let curIndex;\n  while ((curIndex = csv.indexOf('\\n', prevIndex)) != -1) {\n    const line = csv.substr(prevIndex, curIndex - prevIndex).split(',');\n    prevIndex = curIndex + 1;\n\n    const coords = fromLonLat([parseFloat(line[3]), parseFloat(line[2])]);\n    if (isNaN(coords[0]) || isNaN(coords[1])) {\n      // guard against bad data\n      continue;\n    }\n\n    features.push(new Feature({\n      mass: parseFloat(line[1]) || 0,\n      geometry: new Point(coords)\n    }));\n  }\n  source.addFeatures(features);\n};\nclient.send();\n\n\nnew Map({\n  target: 'map-container',\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: source\n    })\n  ],\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}